// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"driver/internal/biz"
	"driver/internal/conf"
	"driver/internal/data"
	"driver/internal/server"
	"driver/internal/service"
	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
)

import (
	_ "go.uber.org/automaxprocs"
)

// Injectors from wire.go:

// wireApp init kratos application.
func wireApp(confService *conf.Service, confServer *conf.Server, confData *conf.Data, logger log.Logger) (*kratos.App, func(), error) {
	dataData, cleanup, err := data.NewData(confData, logger)
	if err != nil {
		return nil, nil, err
	}
	greeterRepo := data.NewGreeterRepo(dataData, logger)
	greeterUsecase := biz.NewGreeterUsecase(greeterRepo, logger)
	greeterService := service.NewGreeterService(greeterUsecase)
	driverImpl := data.NewDriverRepo(dataData, confService)
	driverBiz := biz.NewDriverBiz(driverImpl)
	driverService := service.NewDriverService(driverBiz)
	grpcServer := server.NewGRPCServer(confServer, greeterService, driverService, logger)
	httpServer := server.NewHTTPServer(confServer, greeterService, driverService, logger)
	app := newApp(confService, logger, grpcServer, httpServer)
	return app, func() {
		cleanup()
	}, nil
}
